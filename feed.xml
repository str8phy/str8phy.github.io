<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-03-14T19:42:49+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">modeling @ mechanics</title><subtitle></subtitle><entry><title type="html">Sliding Rotation</title><link href="http://localhost:4000/mech/2025/03/13/Sliding-rotation.html" rel="alternate" type="text/html" title="Sliding Rotation" /><published>2025-03-13T10:31:02+03:00</published><updated>2025-03-13T10:31:02+03:00</updated><id>http://localhost:4000/mech/2025/03/13/Sliding-rotation</id><content type="html" xml:base="http://localhost:4000/mech/2025/03/13/Sliding-rotation.html"><![CDATA[<p>So far rotations are the heart of mechanics for me.</p>

<p>The following simple example exploits following concepts:</p>

<ul>
  <li>moving pivot</li>
  <li>restricted motion</li>
  <li>accelerated &amp; inertial frames of reference</li>
  <li>noncontinuous forces</li>
  <li>analogy between gravity force of vertical pendulum &amp; friction force in the following setup</li>
</ul>

<h1 id="scope">Scope</h1>
<ol>
  <li><a href="#Setup">Setup</a></li>
  <li><a href="#Forces">Identifying Forces</a></li>
  <li><a href="#friction">Adding Friction</a></li>
</ol>

<h2 id="setup--">Setup  <a name="Setup"></a></h2>

<p>The setup is depicted on <strong>fig.1</strong>: \(x_1\) starts moving forward at \(t=t_0\) with speed being constant at \(t_0&lt;t&lt;\infty\).</p>

<p><img src="/assets/pics/SlidingRotate/fig1.png" alt="pic1" /></p>

<p><em><strong>Fig.1</strong> setup: \(x_1\) and \(x_2\) linked by rod, \(x_1\) starts moving with constant speed</em></p>

<p>The problem is to describe the motion of \(x_2\).</p>

<p>Intuitively, \(x_2\) is expected to align its direction gradually with \(\dot{\vec{x}}_1\), i.e. velocity of \(x_1\). 
This can actually be checked by plugging two bounded buttons across a table desk. Produced motion will likely look more or less like this:</p>

<p><img src="/assets/pics/SlidingRotate/fig2.gif" alt="pic2" /></p>

<p><em><strong>Fig.2</strong> Typical motion with friction</em></p>

<h2 id="identifying-forces-">Identifying forces <a name="Forces"></a></h2>

<p>Exploiting the restriction of \(x_2\) being bound to \(x_1\) one might consider reference frame (r.f.) \(\mathcal{S}_1\) 
with origin at \(x_1\) alongside with inertial r.f. \(\mathcal{S}_0\) (with origin at some fixed point, say \((0,0)\)).</p>

<p>Under frictionless assumption there are no torque-generating forces in \(S_1\), so the moment is conserved at \(t&gt;t_0\).</p>

<p>Now let’s take a look on what makes the rod rotate at \(t=t_0\).</p>

<p>Say the velocity of pivot \(x_1\) goes from \(0\) to \(v\) at some finite time span \(\Delta t\). From FPD</p>

\[F\Delta t = mv,\]

<p>where \(\Delta t\) might be thought of being arbitrarly small, \(m\) is a point mass taken \(m=1\) in the following.</p>

<p>I.e. some force \(F\) must have been applied to \(S_1\) to set it in motion. 
This force provides an “apparent” force inside \(S_1\) as seen from following considerations:</p>

\[\ddot{x}_2 \left.\right|_{\mathcal{S}_0} = \ddot{x}_2 \left.\right|_{\mathcal{S}_1} + \ddot{x}_1 \left.\right|_{\mathcal{S}_0},\]

<p>where \(x\lvert_{\mathcal{S}_i}\) is a coordinate of \(x\) in r.f. \(\mathcal{S}_i\).</p>

<p>Passing from accelerations to forces one identify apparent force seen by \(x_2\) in \(\mathcal{S}_1\) as</p>

\[\vec{F}_2\left.\right|_{\mathcal{S}_1} = \vec{F}_2 \left.\right|_{\mathcal{S}_0} + \vec{F},\]

<p>Following the setup, the component \(\vec{F}_2\lvert_{\mathcal{S}_0}\) is essentially a reaction force along the rod, thus not producing torque.
On the other hand, \(\vec{F}\) is always pointed to right on our picture,
 thus having both the normal \(\left(\vec{F}_n\right)\) and tangential \(\left(\vec{F}_\tau\right)\) components relative to \(\overrightarrow{x_2-x_1}\).
 From notions on <strong>Fig.1</strong> follows \(F_n=F\sin\varphi\).</p>

<p>The change of momentum for \(x_2\) in \(\mathcal{S}_1\) is then</p>

\[\Delta M  \overset{\Delta}{=} \Delta I_z\dot{\varphi}=-mv\sin\varphi_0,\]

<p>where \(I_z=\frac{1}{2}ml^2\) is a moment of inertia of \(x_2\) relative to z-axis through \(x_1\).</p>

<p>From the above equation, solution to the problem under frictionless assumption is \(x_2\) being orbiting around \(x_1\) as depicted on <strong>Fig.3</strong>.</p>

<p><img src="/assets/pics/SlidingRotate/fig3.gif" alt="pic3" /></p>

<p><em><strong>Fig.3</strong> Motion modeled under frictionless assumption</em></p>

<h2 id="adding-friction-">Adding Friction <a name="friction"></a></h2>

<p>Things get more interesting when some friction is added in the mix.
The following model is adopted for friction here:</p>

\[\vec{f} = -k\dot{x},\]

<p>where \(\vec{f}\) is a friction force, \(k\) is a friction coefficient.</p>

\[\dot{x}_2 \left.\right|_{\mathcal{S}_0}  = \left[\begin{array}{c} v\\0 \end{array}\right] + \frac{d}{dt}R_\varphi \left[\begin{array}{c} l\\0 \end{array}\right],\]

<p>the \(R_\varphi\) defines a rotation matrix:</p>

\[R_\varphi = \left(\begin{array}{lr} \cos\varphi &amp; -\sin\varphi\\ \sin\varphi &amp; \cos\varphi\end{array}\right)\]

<p>Accounting \(\cos\varphi\sim1, \sin\varphi\sim\varphi\) for small \(\varphi\) one may write</p>

<p>\(dR_\varphi= R_{d\varphi} R_\varphi \sim \left(\begin{array}{lr} 0&amp;-d\varphi\\d\varphi&amp;0\end{array}\right)R_\varphi\).</p>

<p>The above equation for \(\dot{x}_2\) can then be rewritten as follows:</p>

\[\dot{x}_2 \left.\right|_{\mathcal{S}_0}  = \left[\begin{array}{c} v\\0 \end{array}\right] + \dot{\varphi}\times R_\varphi \left[\begin{array}{c} l\\0 \end{array}\right],\]

<p>where \(\cdot\times\cdot\) stands for vector product.</p>

<p>The motion in \(\mathcal{S}_1\) is then defined by</p>

\[I_z\ddot{\varphi} = \overrightarrow{x_2-x_1} \times \vec{f} = \left[\begin{array}{r}-lcos\varphi\\l\sin\varphi\end{array}\right] \times
\left[\begin{array}{l}-kv - k\dot{\varphi}l\sin\varphi\\-k\dot{\varphi}l\cos\varphi\end{array}\right] = -kl\left(v\sin\varphi + \dot{\varphi}l\right)\]

<p>The latter equation describes the self-controlling property of the motion as the torque is always pointed counter-wise with the direction of rotation, i.e. the signs \(\ddot{\varphi}\) and \(\dot{\varphi}\) are opposite.
This point is illustrated on <strong>Fig.4</strong>, while the overall picture was depicted on <strong>Fig.2</strong> above.</p>

<p><img src="/assets/pics/SlidingRotate/fig4.png" alt="pic4" /></p>

<p><em><strong>Fig.4</strong> Behavior of instant phase &amp; frequency over time (friction accounted)</em></p>]]></content><author><name></name></author><category term="mech" /><summary type="html"><![CDATA[So far rotations are the heart of mechanics for me.]]></summary></entry><entry><title type="html">Initial post</title><link href="http://localhost:4000/mech/2025/02/09/init.html" rel="alternate" type="text/html" title="Initial post" /><published>2025-02-09T20:31:02+03:00</published><updated>2025-02-09T20:31:02+03:00</updated><id>http://localhost:4000/mech/2025/02/09/init</id><content type="html" xml:base="http://localhost:4000/mech/2025/02/09/init.html"><![CDATA[<p>initial post</p>

<!--
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

 Jekyll also offers powerful support for code snippets: 


<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>


Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/

-->]]></content><author><name></name></author><category term="mech" /><summary type="html"><![CDATA[initial post]]></summary></entry></feed>